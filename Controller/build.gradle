plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
    id 'war'
}

group 'com.epam.esm'
version '0.0.1-SNAPSHOT'
//sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':Core')

    implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.6.6'

    implementation ('org.springframework.boot:spring-boot-starter-web:2.6.6') {
        exclude group: 'org.springframework.boot', module:'spring-boot-starter-tomcat'
    }

    runtimeOnly 'mysql:mysql-connector-java:8.0.28'

    testImplementation ('org.springframework.boot:spring-boot-starter-test:2.6.6'){
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation 'org.springframework.boot:spring-boot-devtools:2.6.6'

    implementation 'org.hibernate:hibernate-core:5.6.8.Final'

    implementation 'org.springframework:spring-orm:5.3.19'

    implementation 'commons-dbcp:commons-dbcp:1.4'

    implementation group: 'com.auth0', name: 'java-jwt', version: '3.19.2'

    implementation group: 'org.springframework.security', name: 'spring-security-taglibs', version: '5.7.1'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '1.2.5.RELEASE'

    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.7.1'

    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '5.3.4.RELEASE'

    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: '5.3.4.RELEASE'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '2.3.3.RELEASE', ext: 'pom'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'


}

war {
    enabled=true

}

test {
    // Use JUnit Jupiter test framework
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

sonarqube {
    properties {
        property "sonar.jacoco.reportPath" , "${project.buildDir}./jacoco/test.exec"
    }
}

war {
    enabled=true
}